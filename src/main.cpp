#include <Arduino.h>
#include <Wire.h>
#include <eeprom.h>
#include <variables.h>
#include <utils.h>
#include <Time.h>
#include <parse.h>


#define  countday 7
#define  countperiods  4
#define  countklapan  4
#define offsetData 128
uint8_t ii=0;


  int setting(int _setting, int ii)
  {
    if (_setting==0) return 0;
    return ii;
  }

void setKlapans(int set)
{
  int ii=0;
  for (int k=0;k<countklapan;k++)
  {
   for (int d = 0;d<countday;d++)
    {
     for (int t = 0;t<countperiods;t++)
      {
         if (ii<=-1) ii=0;
         klapan[k].sheduler_day[d].timework[t].starthour=setting(set,ii);
         //Serial.println(ii);
         ii++;
         if (ii<=-1) ii=0;
         klapan[k].sheduler_day[d].timework[t].startmin=setting(set,ii);
        // Serial.println(ii);
         ii++;
         if (ii<=-1) ii=0;
         klapan[k].sheduler_day[d].timework[t].duration=setting(set,ii);
        // Serial.println(ii);
         ii++;
      }
   
    }
}
  
}
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Wire.begin(21,22);
  uint8_t firstStart=0;
  loadFromEEPROMData(0,firstStart);
  if (firstStart!=0x50){
    //первый старт
    setKlapans(0);
    if (saveToEEPROMData(offsetData,klapan)!=0) Serial.println("Ошибка записи");
    saveToEEPROMData(0,0x50);
  }else
  {
    {
      Serial.println("Не первый запуск");
      loadFromEEPROMData(offsetData,klapan);
    }
  }
  for (int ii=0;ii<4;ii++)
  {
    pinMode(klapanpins[ii],OUTPUT);
    digitalWrite(klapanpins[ii],HIGH);
  }
  prevtime=millis();

  klapanstate[0]=true;
  klapanstate[1]=true;
  klapanstate[2]=true;
  klapanstate[3]=true;
}


void loop() {
  inputbuffer="GETDATA";
  Serial.println(inputbuffer);
  parseCommand();
  delay(2000);

  inputbuffer="SETDATA:0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:80:81:82:83:84:85:86:87:88:89:90:91:92:93:94:95:96:97:98:99:100:101:102:103:104:105:106:107:108:109:110:111:112:113:114:115:116:117:118:119:120:121:122:123:124:125:126:127:128:129:130:131:132:133:134:135:136:137:138:139:140:141:142:143:144:145:146:147:148:149:150:151:152:153:154:155:156:157:158:159:160:161:162:163:164:165:166:167:168:169:170:171:172:173:174:175:176:177:178:179:180:181:182:183:184:185:186:187:188:189:190:191:192:193:194:195:196:197:198:199:200:201:202:203:204:205:206:207:208:209:210:211:212:213:214:215:216:217:218:219:220:221:222:223:224:225:226:227:228:229:230:231:232:233:234:235:236:237:238:239:240:241:242:243:244:245:246:247:248:249:250:251:252:253:254:255:0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:";
  parseCommand();
  delay(2000);
  Serial.println(crc8());
  inputbuffer="GETDATA";
  Serial.println(inputbuffer);
  parseCommand();
  delay(2000);
  
  inputbuffer="SETDATA:0:1:2:3:4:5:6:7:8:9:11:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:80:81:82:83:84:85:86:87:88:89:90:91:92:93:94:95:96:97:98:99:100:101:102:103:104:105:106:107:108:109:110:111:112:113:114:115:116:117:118:119:120:121:122:123:124:125:126:127:128:129:130:131:132:133:134:135:136:137:138:139:140:141:142:143:144:145:146:147:148:149:150:151:152:153:154:155:156:157:158:159:160:161:162:163:164:165:166:167:168:169:170:171:172:173:174:175:176:177:178:179:180:181:182:183:184:185:186:187:188:189:190:191:192:193:194:195:196:197:198:199:200:201:202:203:204:205:206:207:208:209:210:211:212:213:214:215:216:217:218:219:220:221:222:223:224:225:226:227:228:229:230:231:232:233:234:235:236:237:238:239:240:241:242:243:244:245:246:247:248:249:250:251:252:253:254:255:0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:";
  parseCommand();
  delay(2000);
    Serial.println(crc8());
  
  inputbuffer="GETDATA";
  Serial.println(inputbuffer);
  parseCommand();
  delay(2000);

   inputbuffer="SETDATA:0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:80:81:82:83:84:85:86:87:88:89:90:91:92:93:94:95:96:97:98:99:100:101:102:103:104:105:106:107:108:109:110:111:112:113:114:115:116:117:118:119:120:121:122:123:124:125:126:127:128:129:130:131:132:133:134:135:136:137:138:139:140:141:142:143:144:145:146:147:148:149:150:151:152:153:154:155:156:157:158:159:160:161:162:163:164:165:166:167:168:169:170:171:172:173:174:175:176:177:178:179:180:181:182:183:184:185:186:187:188:189:190:191:192:193:194:195:196:197:198:199:200:201:202:203:204:205:206:207:208:209:210:211:212:213:214:215:216:217:218:219:220:221:222:223:224:225:226:227:228:229:230:231:232:233:234:235:236:237:238:239:240:241:242:243:244:245:246:247:248:249:250:251:252:253:254:255:0:1:2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:28:29:30:31:32:33:34:35:36:37:38:39:40:41:42:43:44:45:46:47:48:49:50:51:52:53:54:55:56:57:58:59:60:61:62:63:64:65:66:67:68:69:70:71:72:73:74:75:76:77:78:79:";
  parseCommand();
  delay(2000);
  Serial.println(crc8());
  
  inputbuffer="GETDATA";
  Serial.println(inputbuffer);
  parseCommand();
  delay(2000);

  delay(300000);

  inputbuffer="GETTIME";
  Serial.println(inputbuffer);
  parseCommand();
  delay(2000);
  
//  for (size_t i = 0; i < 1000; i++)
  {
  inputbuffer="SETTIME:10:10:10:10:10:2020:";
 // Serial.println(inputbuffer);
  parseCommand();
  delay(2000);
  }
  inputbuffer="GETTIME";
  Serial.println(inputbuffer);
  parseCommand();
  delay(20000000);
   
 
}